-- Generate the GPU utilization report for the last 6 months
SELECT
    -- Format the month start date into 'YYYY-I' format for reporting
    DATE_FORMAT(periods.month_start, '%Y-%m') AS report_month,
    -- Include the queue ID for grouping and reporting purposes
    j.queue_id,
    -- Calculate the GPU utilization for the month
    ROUND(
        (
            SUM(
                TIMESTAMPDIFF(
                    SECOND,
                    GREATEST(j.start_time, periods.month_start),
                    LEAST(IFNULL(j.complete_date, periods.month_end), periods.month_end)
                ) / 3600 * j.ngpu
            ) / 
            (
                -- Total available hours in the month
                CASE
                    WHEN j.queue_id = 'mlaas' THEN 40
                    WHEN j.queue_id = 'mlaas_a100' THEN 20
                    WHEN j.queue_id = 'mlaas_h100' THEN 48
                    ELSE 40 -- Default in case of other queue IDs
                END * DATEDIFF(periods.month_end, periods.month_start) * 24
            )
        ) * 100, 2
    ) AS utilization_percentage
FROM (
    -- Generate a list of start and end dates for the last 6 months
    SELECT
        DATE_FORMAT(DATE_ADD(LAST_DAY(NOW()), INTERVAL -m.num MONTH), '%Y-%m-15') AS month_start,
        LAST_DAY(DATE_ADD(LAST_DAY(NOW()), INTERVAL -m.num MONTH)) AS month_end
    FROM (
        -- Create a simple list of numbers (0 to 5) to represent the last 6 months
        SELECT 0 AS num UNION ALL
        SELECT 1 UNION ALL
        SELECT 2 UNION ALL
        SELECT 3 UNION ALL
        SELECT 4 UNION ALL
        SELECT 5
    ) m
) periods
-- Join the jobs table to the generated period ranges to aggregate GPU usage
LEFT JOIN job j ON j.start_time < periods.month_end
    -- Exclude jobs with an invalid start time
    AND j.start_time != '0000-00-00 00:00:00'
    -- Include jobs that are either completed or incomplete but overlap with the period
    AND (j.complete_date > periods.month_start OR j.complete_date IS NULL)
WHERE
    -- Filter only jobs in the relevant queues
    j.queue_id IN ('mlaas', 'mlaas_a100', 'mlaas_h100')
GROUP BY
    -- Group the results by the period's start and end dates and queue ID
    periods.month_start, periods.month_end, j.queue_id
ORDER BY
    -- Order the results in descending order of the month
    periods.month_start DESC;
